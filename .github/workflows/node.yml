name: Node.js CI/CD Pipeline
on:
  push:
    branches: [ "main", "develop" ]

jobs:
  # Build & Test Stage
  
  build-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (Code Analysis)
        run: npx eslint@8 . --ext .js,.jsx,.ts,.tsx

      - name: Run Tests
        run: npm test


  
  # Security Analysis Stage
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3


  # Versioning & Release Stage
  
  release:
    runs-on: ubuntu-latest
    needs: [build-test, codeql-analysis]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Automate Versioning
      - name: Bump version and push tag
        uses: phips28/gh-action-bump-version@v9
        id: bump-version
        with:
          tag-prefix: "v"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump-version.outputs.newTag }}
          name: Release ${{ steps.bump-version.outputs.newTag }}
          body: |
           New release deployed
            - Code tested
            - Security scanned
            - Version automated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Deploy Stage
  
  deploy:
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch
    runs-on: ubuntu-latest
    needs: [release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy Application
        run: |
          echo " Deploying application..."
          # Example: Docker build and push
          docker build -t myapp:${{ github.sha }} .
          docker tag myapp:${{ github.sha }} mydockerhub/myapp:${{ github.sha }}
          docker push mydockerhub/myapp:${{ github.sha }}
